package au.org.theark.core.model.lims.entity;

// Generated 15/06/2011 1:22:58 PM by Hibernate Tools 3.3.0.GA

import java.util.Date;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;

import au.org.theark.core.model.Constants;
import au.org.theark.core.model.study.entity.Study;

/**
 * Biospecimen generated by hbm2java
 */
@Entity
@Table(name = "biospecimen", schema = Constants.LIMS_TABLE_SCHEMA)
public class Biospecimen implements java.io.Serializable
{

	/**
	 * 
	 */
	private static final long		serialVersionUID	= -6811160809915149538L;
	private Long						id;
	private String						timestamp;
	private BioCollection			bioCollection;
	private String						biospecimenId;
	private Study						study;
	private Long						substudyId;
	private Long						patientId;
	private Long						parentId;
	private String						parentid;
	private Long						oldId;
	private Long						deleted;
	private String						otherid;
	private String						storedIn;
	private Date						sampleTime;
	private String						grade;
	private InvCell					cell;
	private Long						depth;
	private Date						sampledate;
	private Date						extractedTime;
	private String						location;
	private BioSampletype			sampleType;
	private String						species;
	private Double						qtyCollected;
	private Date						dateextracted;
	private Double						qtyRemoved;
	private Double						gestat;
	private String						comments;
	private Date						datedistributed;
	private String						collaborator;
	private Double						dnaconc;
	private Double						purity;
	private String						anticoag;
	private String						protocol;
	private Long						dnaBank;
	private Long						quantity;
	private String						units;
	private String						quality;
	private Long						withdrawn;
	private String						status;
	private String						treatment;
	
	/*
	private Set<InvCell>				invCells				= new HashSet<InvCell>(0);
	private Set<BioTransaction>	bioTransactions	= new HashSet<BioTransaction>(0);
	*/

	public Biospecimen()
	{
	}

	public Biospecimen(Long id, String biospecimenId, InvCell cell, Long sampletypeId, BioSampletype sampleType)
	{
		this.id = id;
		this.biospecimenId = biospecimenId;
		this.cell = cell;
		this.sampleType = sampleType;
	}

	public Biospecimen(Long id, BioCollection bioCollection, String biospecimenId, Study study, Long substudyId, Long patientId, Long parentId, String parentid, Long oldId, Long deleted, String otherid,
			String storedIn, Date sampleTime, String grade, InvCell cell, Long depth, Date sampledate, Date extractedTime, String location, Long sampleTypeId, BioSampletype sampleType,
			String samplesubtype, String subtypedesc, String species, Double qtyCollected, Date dateextracted, Double qtyRemoved, Double gestat, String comments, Date datedistributed,
			String collaborator, Double dnaconc, Double purity, String anticoag, String protocol, Long dnaBank, Long quantity, String units, String quality, Long withdrawn, String status,
			String treatment, Set<InvCell> invCells, Set<BioTransaction> bioTransactions)
	{
		this.id = id;
		this.bioCollection = bioCollection;
		this.biospecimenId = biospecimenId;
		this.study = study;
		this.substudyId = substudyId;
		this.patientId = patientId;
		this.parentId = parentId;
		this.parentid = parentid;
		this.oldId = oldId;
		this.deleted = deleted;
		this.otherid = otherid;
		this.storedIn = storedIn;
		this.sampleTime = sampleTime;
		this.grade = grade;
		this.cell = cell;
		this.depth = depth;
		this.sampledate = sampledate;
		this.extractedTime = extractedTime;
		this.location = location;
		this.sampleType = sampleType;
		this.species = species;
		this.qtyCollected = qtyCollected;
		this.dateextracted = dateextracted;
		this.qtyRemoved = qtyRemoved;
		this.gestat = gestat;
		this.comments = comments;
		this.datedistributed = datedistributed;
		this.collaborator = collaborator;
		this.dnaconc = dnaconc;
		this.purity = purity;
		this.anticoag = anticoag;
		this.protocol = protocol;
		this.dnaBank = dnaBank;
		this.quantity = quantity;
		this.units = units;
		this.quality = quality;
		this.withdrawn = withdrawn;
		this.status = status;
		this.treatment = treatment;
		/*
		this.invCells = invCells;
		this.bioTransactions = bioTransactions;
		*/
	}

	@Id
	@SequenceGenerator(name = "biospecimen_generator", sequenceName = "BIOSPECIMEN_SEQUENCE")
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "biospecimen_generator")
	public Long getId()
	{
		return this.id;
	}

	public void setId(Long id)
	{
		this.id = id;
	}

	
	@Column(name = "TIMESTAMP", length = 55)
	public String getTimestamp()
	{
		return this.timestamp;
	}

	public void setTimestamp(String timestamp)
	{
		this.timestamp = timestamp;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "COLLECTION_ID")
	public BioCollection getBioCollection()
	{
		return this.bioCollection;
	}

	public void setBioCollection(BioCollection bioCollection)
	{
		this.bioCollection = bioCollection;
	}

	@Column(name = "BIOSPECIMEN_ID", nullable = false)
	public String getBiospecimenId()
	{
		return this.biospecimenId;
	}

	public void setBiospecimenId(String biospecimenId)
	{
		this.biospecimenId = biospecimenId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "STUDY_ID")
	public Study getStudy()
	{
		return this.study;
	}

	public void setStudy(Study study)
	{
		this.study = study;
	}

	@Column(name = "SUBSTUDY_ID")
	public Long getSubstudyId()
	{
		return this.substudyId;
	}

	public void setSubstudyId(Long substudyId)
	{
		this.substudyId = substudyId;
	}

	@Column(name = "PATIENT_ID")
	public Long getPatientId()
	{
		return this.patientId;
	}

	public void setPatientId(Long patientId)
	{
		this.patientId = patientId;
	}

	@Column(name = "PARENT_ID")
	public Long getParentId()
	{
		return this.parentId;
	}

	public void setParentId(Long parentId)
	{
		this.parentId = parentId;
	}

	@Column(name = "PARENTID", length = 50)
	public String getParentid()
	{
		return this.parentid;
	}

	public void setParentid(String parentid)
	{
		this.parentid = parentid;
	}

	@Column(name = "OLD_ID")
	public Long getOldId()
	{
		return this.oldId;
	}

	public void setOldId(Long oldId)
	{
		this.oldId = oldId;
	}

	@Column(name = "DELETED")
	public Long getDeleted()
	{
		return this.deleted;
	}

	public void setDeleted(Long deleted)
	{
		this.deleted = deleted;
	}

	@Column(name = "OTHERID", length = 50)
	public String getOtherid()
	{
		return this.otherid;
	}

	public void setOtherid(String otherid)
	{
		this.otherid = otherid;
	}

	@Column(name = "STORED_IN", length = 50)
	public String getStoredIn()
	{
		return this.storedIn;
	}

	public void setStoredIn(String storedIn)
	{
		this.storedIn = storedIn;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "SAMPLE_TIME", length = 19)
	public Date getSampleTime()
	{
		return this.sampleTime;
	}

	public void setSampleTime(Date sampleTime)
	{
		this.sampleTime = sampleTime;
	}

	@Column(name = "GRADE")
	public String getGrade()
	{
		return this.grade;
	}

	public void setGrade(String grade)
	{
		this.grade = grade;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CELL_ID")
	public InvCell getCell()
	{
		return this.cell;
	}

	public void setCell(InvCell cell)
	{
		this.cell = cell;
	}

	@Column(name = "DEPTH")
	public Long getDepth()
	{
		return this.depth;
	}

	public void setDepth(Long depth)
	{
		this.depth = depth;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "SAMPLEDATE", length = 19)
	public Date getSampledate()
	{
		return this.sampledate;
	}

	public void setSampledate(Date sampledate)
	{
		this.sampledate = sampledate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "EXTRACTED_TIME", length = 19)
	public Date getExtractedTime()
	{
		return this.extractedTime;
	}

	public void setExtractedTime(Date extractedTime)
	{
		this.extractedTime = extractedTime;
	}

	@Column(name = "LOCATION")
	public String getLocation()
	{
		return this.location;
	}

	public void setLocation(String location)
	{
		this.location = location;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SAMPLETYPE_ID")
	public BioSampletype getSampleType()
	{
		return this.sampleType;
	}

	public void setSampleType(BioSampletype sampleType)
	{
		this.sampleType = sampleType;
	}

	@Column(name = "SPECIES")
	public String getSpecies()
	{
		return this.species;
	}

	public void setSpecies(String species)
	{
		this.species = species;
	}

	@Column(name = "QTY_COLLECTED", precision = 22, scale = 0)
	public Double getQtyCollected()
	{
		return this.qtyCollected;
	}

	public void setQtyCollected(Double qtyCollected)
	{
		this.qtyCollected = qtyCollected;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DATEEXTRACTED", length = 19)
	public Date getDateextracted()
	{
		return this.dateextracted;
	}

	public void setDateextracted(Date dateextracted)
	{
		this.dateextracted = dateextracted;
	}

	@Column(name = "QTY_REMOVED", precision = 22, scale = 0)
	public Double getQtyRemoved()
	{
		return this.qtyRemoved;
	}

	public void setQtyRemoved(Double qtyRemoved)
	{
		this.qtyRemoved = qtyRemoved;
	}

	@Column(name = "GESTAT", precision = 22, scale = 0)
	public Double getGestat()
	{
		return this.gestat;
	}

	public void setGestat(Double gestat)
	{
		this.gestat = gestat;
	}

	@Column(name = "COMMENTS", length = 65535)
	public String getComments()
	{
		return this.comments;
	}

	public void setComments(String comments)
	{
		this.comments = comments;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DATEDISTRIBUTED", length = 19)
	public Date getDatedistributed()
	{
		return this.datedistributed;
	}

	public void setDatedistributed(Date datedistributed)
	{
		this.datedistributed = datedistributed;
	}

	@Column(name = "COLLABORATOR", length = 100)
	public String getCollaborator()
	{
		return this.collaborator;
	}

	public void setCollaborator(String collaborator)
	{
		this.collaborator = collaborator;
	}

	@Column(name = "DNACONC", precision = 22, scale = 0)
	public Double getDnaconc()
	{
		return this.dnaconc;
	}

	public void setDnaconc(Double dnaconc)
	{
		this.dnaconc = dnaconc;
	}

	@Column(name = "PURITY", precision = 22, scale = 0)
	public Double getPurity()
	{
		return this.purity;
	}

	public void setPurity(Double purity)
	{
		this.purity = purity;
	}

	@Column(name = "ANTICOAG", length = 100)
	public String getAnticoag()
	{
		return this.anticoag;
	}

	public void setAnticoag(String anticoag)
	{
		this.anticoag = anticoag;
	}

	@Column(name = "PROTOCOL", length = 100)
	public String getProtocol()
	{
		return this.protocol;
	}

	public void setProtocol(String protocol)
	{
		this.protocol = protocol;
	}

	@Column(name = "DNA_BANK")
	public Long getDnaBank()
	{
		return this.dnaBank;
	}

	public void setDnaBank(Long dnaBank)
	{
		this.dnaBank = dnaBank;
	}

	@Column(name = "QUANTITY")
	public Long getQuantity()
	{
		return this.quantity;
	}

	public void setQuantity(Long quantity)
	{
		this.quantity = quantity;
	}

	@Column(name = "UNITS", length = 10)
	public String getUnits()
	{
		return this.units;
	}

	public void setUnits(String units)
	{
		this.units = units;
	}

	@Column(name = "QUALITY", length = 100)
	public String getQuality()
	{
		return this.quality;
	}

	public void setQuality(String quality)
	{
		this.quality = quality;
	}

	@Column(name = "WITHDRAWN")
	public Long getWithdrawn()
	{
		return this.withdrawn;
	}

	public void setWithdrawn(Long withdrawn)
	{
		this.withdrawn = withdrawn;
	}

	@Column(name = "STATUS", length = 20)
	public String getStatus()
	{
		return this.status;
	}

	public void setStatus(String status)
	{
		this.status = status;
	}

	@Column(name = "TREATMENT", length = 50)
	public String getTreatment()
	{
		return this.treatment;
	}

	public void setTreatment(String treatment)
	{
		this.treatment = treatment;
	}

	/*
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "biospecimen")
	public Set<InvCell> getInvCells()
	{
		return this.invCells;
	}

	public void setInvCells(Set<InvCell> invCells)
	{
		this.invCells = invCells;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "biospecimen")
	public Set<BioTransaction> getBioTransactions()
	{
		return this.bioTransactions;
	}

	public void setBioTransactions(Set<BioTransaction> bioTransactions)
	{
		this.bioTransactions = bioTransactions;
	}
	*/

}

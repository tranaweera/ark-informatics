/*******************************************************************************
 * Copyright (c) 2011  University of Western Australia. All rights reserved.
 * 
 * This file is part of The Ark.
 * 
 * The Ark is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 * 
 * The Ark is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 ******************************************************************************/
package au.org.theark.core.model.lims.entity;

// Generated 15/06/2011 1:22:58 PM by Hibernate Tools 3.3.0.GA

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.envers.Audited;
import org.hibernate.envers.RelationTargetAuditMode;

import au.org.theark.core.model.Constants;

/**
 * InvBox generated by hbm2java
 * Note the hierarchy: site -< freezer -< rack -< box -< cell
 */
@Entity
@Table(name = "inv_rack", schema = Constants.LIMS_TABLE_SCHEMA)
@Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
public class InvRack implements java.io.Serializable {


	private static final long	serialVersionUID	= 971975144156543372L;
	private Long			id;
	private String			timestamp;
	private InvFreezer	invFreezer;
	private Integer		deleted;
	private String			name;
	private Integer		available;
	private String			description;
	private Integer		capacity;
	private List<InvBox>	invBoxes	= new ArrayList<InvBox>(0);
	protected String 		siteFreezerRack;

	public InvRack() {
	}

	public InvRack(Long id, InvFreezer invFreezer, String name) {
		this.id = id;
		this.invFreezer = invFreezer;
		this.name = name;
	}

	public InvRack(Long id, InvFreezer invFreezer, Integer deleted, String name, Integer available, String description, Integer capacity, List<InvBox> invBoxes) {
		this.id = id;
		this.invFreezer = invFreezer;
		this.deleted = deleted;
		this.name = name;
		this.available = available;
		this.description = description;
		this.capacity = capacity;
		this.invBoxes = invBoxes;
	}

	@Id
	@SequenceGenerator(name = "inv_rack_generator", sequenceName = "INV_RACK_SEQUENCE")
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "inv_rack_generator")
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "TIMESTAMP", length = 55)
	public String getTimestamp() {
		return this.timestamp;
	}

	public void setTimestamp(String timestamp) {
		this.timestamp = timestamp;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FREEZER_ID", nullable = false)
	public InvFreezer getInvFreezer() {
		return this.invFreezer;
	}

	public void setInvFreezer(InvFreezer invFreezer) {
		this.invFreezer = invFreezer;
	}

	@Column(name = "DELETED")
	public Integer getDeleted() {
		return this.deleted;
	}

	public void setDeleted(Integer deleted) {
		this.deleted = deleted;
	}

	@Column(name = "NAME", nullable = false, length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "AVAILABLE")
	public Integer getAvailable() {
		return this.available;
	}

	public void setAvailable(Integer available) {
		this.available = available;
	}

	@Column(name = "DESCRIPTION", length = 65535)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "CAPACITY")
	public Integer getCapacity() {
		return this.capacity;
	}

	public void setCapacity(Integer capacity) {
		this.capacity = capacity;
	}

	@OrderBy(value="name")
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "invRack") 
	public List<InvBox> getInvBoxes() { 
		return this.invBoxes; 
	}
	
	public void setInvBoxes(List<InvBox> invBoxes) { 
		this.invBoxes = invBoxes; 
	}

	@Transient
	public List<InvBox> getChildren() {
		return getInvBoxes();
	}
	
	@Transient
	public String getNodeName() {
		return getName();
	}
	
	@Transient
	public String getNodeType() {
		return this.getClass().getCanonicalName();
	}

	public void setSiteFreezerRack(String siteFreezerRack) {
		this.siteFreezerRack = siteFreezerRack;
	}

	@Transient
	public String getSiteFreezerRack() {
		StringBuilder displayExpression = new StringBuilder();
		displayExpression.append(invFreezer.getInvSite().getName());
		displayExpression.append(" > ");
		displayExpression.append(invFreezer.getName());
		displayExpression.append(" > ");
		displayExpression.append(name);
		return displayExpression.toString();
	}
}

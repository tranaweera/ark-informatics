/*******************************************************************************
 * Copyright (c) 2011  University of Western Australia. All rights reserved.
 * 
 * This file is part of The Ark.
 * 
 * The Ark is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 * 
 * The Ark is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 ******************************************************************************/
package au.org.theark.core.model.lims.entity;

// Generated 15/06/2011 1:22:58 PM by Hibernate Tools 3.3.0.GA

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import au.org.theark.core.model.Constants;

/**
 * Attachment generated by hbm2java
 */
@Entity
@Table(name = "attachment", schema = Constants.LIMS_TABLE_SCHEMA)
public class Attachment implements java.io.Serializable {

	private Long		id;
	private String		timestamp;
	private Integer	deleted;
	private String		attachedby;
	private String		fileName;
	private String		comments;
	private String		domain;
	private String		na;

	public Attachment() {
	}

	public Attachment(Long id, String attachedby, String domain) {
		this.id = id;
		this.attachedby = attachedby;
		this.domain = domain;
	}

	public Attachment(Long id, Integer deleted, String attachedby, String fileName, String comments, String domain, String na) {
		this.id = id;
		this.deleted = deleted;
		this.attachedby = attachedby;
		this.fileName = fileName;
		this.comments = comments;
		this.domain = domain;
		this.na = na;
	}

	@Id
	@SequenceGenerator(name = "attachment_generator", sequenceName = "ATTACHMENT_SEQUENCE")
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "attachment_generator")
	@Column(name = "ID", unique = true, nullable = false, precision = 22, scale = 0)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "TIMESTAMP", length = 55)
	public String getTimestamp() {
		return this.timestamp;
	}

	public void setTimestamp(String timestamp) {
		this.timestamp = timestamp;
	}

	@Column(name = "DELETED")
	public Integer getDeleted() {
		return this.deleted;
	}

	public void setDeleted(Integer deleted) {
		this.deleted = deleted;
	}

	@Column(name = "ATTACHEDBY", nullable = false, length = 65535)
	public String getAttachedby() {
		return this.attachedby;
	}

	public void setAttachedby(String attachedby) {
		this.attachedby = attachedby;
	}

	@Column(name = "FILE_NAME", length = 50)
	public String getFileName() {
		return this.fileName;
	}

	public void setFileName(String fileName) {
		this.fileName = fileName;
	}

	@Column(name = "COMMENTS", length = 65535)
	public String getComments() {
		return this.comments;
	}

	public void setComments(String comments) {
		this.comments = comments;
	}

	@Column(name = "DOMAIN", nullable = false, length = 50)
	public String getDomain() {
		return this.domain;
	}

	public void setDomain(String domain) {
		this.domain = domain;
	}

	@Column(name = "NA", length = 50)
	public String getNa() {
		return this.na;
	}

	public void setNa(String na) {
		this.na = na;
	}

}

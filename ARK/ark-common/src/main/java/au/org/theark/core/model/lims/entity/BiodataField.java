/*******************************************************************************
 * Copyright (c) 2011  University of Western Australia. All rights reserved.
 * 
 * This file is part of The Ark.
 * 
 * The Ark is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 * 
 * The Ark is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 ******************************************************************************/
package au.org.theark.core.model.lims.entity;

// Generated 15/06/2011 1:22:58 PM by Hibernate Tools 3.3.0.GA

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import au.org.theark.core.model.Constants;

/**
 * BiodataField generated by hbm2java
 */
@Entity
@Table(name = "biodata_field", schema = Constants.LIMS_TABLE_SCHEMA)
public class BiodataField implements java.io.Serializable {


	private static final long serialVersionUID = 1L;
	private Long							id;
	private Long							typeId;
	private String							format;
	private String							columnname;
	private Integer						unitId;
	private String							lovtype;
	private String							domain;
	private String							fieldname;
	private Set<Biodata>					biodatas					= new HashSet<Biodata>(0);
	private Set<BiodataFieldGroup>	biodataFieldGroups	= new HashSet<BiodataFieldGroup>(0);

	public BiodataField() {
	}

	public BiodataField(Long id, Long typeId, String columnname) {
		this.id = id;
		this.typeId = typeId;
		this.columnname = columnname;
	}

	public BiodataField(Long id, Long typeId, String format, String columnname, Integer unitId, String lovtype, String domain, String fieldname, Set<Biodata> biodatas,
			Set<BiodataFieldGroup> biodataFieldGroups) {
		this.id = id;
		this.typeId = typeId;
		this.format = format;
		this.columnname = columnname;
		this.unitId = unitId;
		this.lovtype = lovtype;
		this.domain = domain;
		this.fieldname = fieldname;
		this.biodatas = biodatas;
		this.biodataFieldGroups = biodataFieldGroups;
	}

	@Id
	@SequenceGenerator(name = "biodatafield_generator", sequenceName = "BIODATAFIELD_SEQUENCE")
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "biodatafield_generator")
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "TYPE_ID", nullable = false)
	public Long getTypeId() {
		return this.typeId;
	}

	public void setTypeId(Long typeId) {
		this.typeId = typeId;
	}

	@Column(name = "FORMAT", length = 20)
	public String getFormat() {
		return this.format;
	}

	public void setFormat(String format) {
		this.format = format;
	}

	@Column(name = "COLUMNNAME", nullable = false, length = 50)
	public String getColumnname() {
		return this.columnname;
	}

	public void setColumnname(String columnname) {
		this.columnname = columnname;
	}

	@Column(name = "UNIT_ID")
	public Integer getUnitId() {
		return this.unitId;
	}

	public void setUnitId(Integer unitId) {
		this.unitId = unitId;
	}

	@Column(name = "LOVTYPE", length = 20)
	public String getLovtype() {
		return this.lovtype;
	}

	public void setLovtype(String lovtype) {
		this.lovtype = lovtype;
	}

	@Column(name = "DOMAIN", length = 50)
	public String getDomain() {
		return this.domain;
	}

	public void setDomain(String domain) {
		this.domain = domain;
	}

	@Column(name = "FIELDNAME", length = 50)
	public String getFieldname() {
		return this.fieldname;
	}

	public void setFieldname(String fieldname) {
		this.fieldname = fieldname;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "biodataField")
	public Set<Biodata> getBiodatas() {
		return this.biodatas;
	}

	public void setBiodatas(Set<Biodata> biodatas) {
		this.biodatas = biodatas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "biodataField")
	public Set<BiodataFieldGroup> getBiodataFieldGroups() {
		return this.biodataFieldGroups;
	}

	public void setBiodataFieldGroups(Set<BiodataFieldGroup> biodataFieldGroups) {
		this.biodataFieldGroups = biodataFieldGroups;
	}

}
